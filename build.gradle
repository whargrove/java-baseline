plugins {
    id "build-dashboard"
    id "project-report"
    id "com.dorongold.task-tree"
    id "java"
    id "com.github.andygoossens.gradle-modernizer-plugin"
    id "jacoco"
    id "application"
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    compileOnly "com.github.spotbugs:spotbugs-annotations:$spotbugsVersion"
    compileOnly "com.google.code.findbugs:findbugs-annotations:$findbugsAnnotationsVersion"
    compileOnly "org.gaul:modernizer-maven-annotations:$modernizerVersion"

    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"

    testImplementation "org.junit.jupiter:junit-jupiter:$junitVersion"
    testImplementation "org.assertj:assertj-core:$assertJVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"

    // Quiet build -- build works without this, but JUnit complains
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of("$jdkVersion"))
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ["-Werror", "-Xlint:all,-processing", "-parameters"]
}

test {
    // When tests fail, you still have a coverage report
    finalizedBy jacocoTestReport
}

tasks.withType(Test) {
    // Quieter builds when JUL is in use (you or another library or tool)
    // TODO: Keep builds noisy in CI
    systemProperty "java.util.logging.config.file",
            "$projectDir/config/logging.properties"
    useJUnitPlatform()
}

modernizer {
    failOnViolations = true
    includeTestClasses = true
    javaVersion = "$jdkVersion"
}

jacoco {
    toolVersion = jacocoVersion
}

jacocoTestReport {
    dependsOn test
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 1.00
            }
        }
    }
}

check {
    dependsOn += jacocoTestCoverageVerification
}

wrapper {
    gradleVersion = gradleWrapperVersion
    distributionType = "ALL"
}

jar {
    manifest {
        attributes 'Main-Class': "$mainClass"
        attributes 'Add-Opens': 'java.base/java.lang java.base/java.util java.base/java.lang.reflect'
    }
}
